{
	"info": {
		"_postman_id": "37883f64-64e1-4972-91c5-376a843baf21",
		"name": "Aug22CollectionForJenkins3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16175893"
	},
	"item": [
		{
			"name": "1-AuthAPI",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\" : \"{{username}}\",\n    \"password\" : \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/auth",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": [
				{
					"name": "1-AuthAPI",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\" : \"admin\",\n    \"password\" : \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/auth",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"auth"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Cowboy"
						},
						{
							"key": "Report-To",
							"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722268679&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=FdbYSK9uVNMY1eSRqCQLRi0qK%2BwI0nw%2FFNX9pOQ407Y%3D\"}]}"
						},
						{
							"key": "Reporting-Endpoints",
							"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722268679&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=FdbYSK9uVNMY1eSRqCQLRi0qK%2BwI0nw%2FFNX9pOQ407Y%3D"
						},
						{
							"key": "Nel",
							"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "27"
						},
						{
							"key": "Etag",
							"value": "W/\"1b-SNPr+qxvorXMEVBT2zq4VhVrguM\""
						},
						{
							"key": "Date",
							"value": "Mon, 29 Jul 2024 15:57:59 GMT"
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						}
					],
					"cookie": [],
					"body": "{\n    \"token\": \"9a6c09cac036612\"\n}"
				}
			]
		},
		{
			"name": "2-GetBookingAPI",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/booking",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "3-CreateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const bookingResponse = pm.response.json();\r",
							"const bookingId =  bookingResponse.bookingid;\r",
							"console.log(\"Booking Id: \" + bookingId);\r",
							"\r",
							"pm.collectionVariables.set(\"booking_id\", bookingId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"Jim\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/booking",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "4-UpdateBooking1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//get token from Auth API response\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get(\"baseURL\")+'/auth',\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        \"Content-Type\": 'application/json'\r",
							"    },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({       \r",
							"                \"username\" : \"admin\",\r",
							"                \"password\" : \"password123\"\r",
							"        })\r",
							"    }\r",
							"}, function(error, response) { //function holds the response which is JSON response\r",
							"    if(error) {\r",
							"        console.log(error);\r",
							"    }\r",
							"    else {\r",
							"        //convert JSON to JS object using parse() coz response is a JSON\r",
							"        const responseBody = JSON.parse(response.text()); //text() converts response to text/string\r",
							"        const tokenId = responseBody.token;\r",
							"        console.log(\"token id: \" + tokenId);\r",
							"        pm.variables.set(\"booking_token_id\", tokenId);\r",
							"    }\r",
							"})\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token={{booking_token_id}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"James_Updated_1\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/booking/{{booking_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking",
						"{{booking_id}}"
					]
				}
			},
			"response": [
				{
					"name": "4-UpdateBooking",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token={{booking_token_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\" : \"James_Updated_1\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/116",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"116"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Cowboy"
						},
						{
							"key": "Report-To",
							"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722438229&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=BPw5GvjOKtd15ITVvl3Dj8lr6NG8fmr%2Fv5AnDTQZx6Y%3D\"}]}"
						},
						{
							"key": "Reporting-Endpoints",
							"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722438229&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=BPw5GvjOKtd15ITVvl3Dj8lr6NG8fmr%2Fv5AnDTQZx6Y%3D"
						},
						{
							"key": "Nel",
							"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "180"
						},
						{
							"key": "Etag",
							"value": "W/\"b4-35/FofcoKtyzSNEcEHfkQ73UKTI\""
						},
						{
							"key": "Date",
							"value": "Wed, 31 Jul 2024 15:03:49 GMT"
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						}
					],
					"cookie": [],
					"body": "{\n    \"firstname\": \"James_Updated_1\",\n    \"lastname\": \"Brown\",\n    \"totalprice\": 111,\n    \"depositpaid\": true,\n    \"bookingdates\": {\n        \"checkin\": \"2018-01-01\",\n        \"checkout\": \"2019-01-01\"\n    },\n    \"additionalneeds\": \"Breakfast\"\n}"
				}
			]
		},
		{
			"name": "4-UpdateBooking2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//get token from Auth API response\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get(\"baseURL\")+'/auth',\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        \"Content-Type\": 'application/json'\r",
							"    },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({       \r",
							"                \"username\" : pm.environment.get(\"username\"),\r",
							"                \"password\" : pm.environment.get(\"password\")\r",
							"        })\r",
							"    }\r",
							"}, function(error, response) { //function holds the response which is JSON response\r",
							"    if(error) {\r",
							"        console.log(error);\r",
							"    }\r",
							"    else {\r",
							"        //convert JSON to JS object using parse() coz response is a JSON\r",
							"        const responseBody = JSON.parse(response.text()); //text() converts response to text/string\r",
							"        const tokenId = responseBody.token;\r",
							"        console.log(\"token id: \" + tokenId);\r",
							"        pm.variables.set(\"booking_token_id\", tokenId);\r",
							"    }\r",
							"})\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token={{booking_token_id}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"James_Updated_1\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/booking/{{booking_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking",
						"{{booking_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "5-DeleteBooking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//get token from Auth API response\r",
							"pm.sendRequest({\r",
							"    url:'https://restful-booker.herokuapp.com/auth',\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        \"Content-Type\": 'application/json'\r",
							"    },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({       \r",
							"                \"username\" : \"admin\",\r",
							"                \"password\" : \"password123\"\r",
							"        })\r",
							"    }\r",
							"}, function(error, response) { //function holds the response which is JSON response\r",
							"    if(error) {\r",
							"        console.log(error);\r",
							"    }\r",
							"    else {\r",
							"        //convert JSON to JS object using parse() coz response is a JSON\r",
							"        const responseBody = JSON.parse(response.text()); //text() converts response to text/string\r",
							"        const tokenId = responseBody.token;\r",
							"        console.log(\"token id: \" + tokenId);\r",
							"        pm.variables.set(\"booking_token_id\", tokenId);\r",
							"    }\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token={{booking_token_id}}"
					}
				],
				"url": {
					"raw": "{{baseURL}}/booking/{{booking_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking",
						"{{booking_id}}"
					]
				}
			},
			"response": [
				{
					"name": "5-DeleteBooking",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token={{booking_token_id}}"
							}
						],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/116",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"116"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Server",
							"value": "Cowboy"
						},
						{
							"key": "Report-To",
							"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1722438456&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=74dCt4DQzr4e6ZZkOaEZUtY42cGyj6pWCG9vJEIuCqk%3D\"}]}"
						},
						{
							"key": "Reporting-Endpoints",
							"value": "heroku-nel=https://nel.heroku.com/reports?ts=1722438456&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=74dCt4DQzr4e6ZZkOaEZUtY42cGyj6pWCG9vJEIuCqk%3D"
						},
						{
							"key": "Nel",
							"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "text/plain; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "7"
						},
						{
							"key": "Etag",
							"value": "W/\"7-rM9AyJuqT6iOan/xHh+AW+7K/T8\""
						},
						{
							"key": "Date",
							"value": "Wed, 31 Jul 2024 15:07:36 GMT"
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						}
					],
					"cookie": [],
					"body": "Created"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "booking_id",
			"value": "",
			"type": "string"
		}
	]
}